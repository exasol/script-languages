name: Build SLC

on:
  workflow_call:
    inputs:
      flavor:
          description: 'A flavor'
          required: true
          type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:

  detect-runner:
    runs-on: ubuntu-22.04
    steps:
     - uses: actions/checkout@v4
     - name: Setup Python & Poetry Environment
       uses: exasol/python-toolbox/.github/actions/python-environment@1.0.1
       with:
         python-version: '3.10'
         poetry-version: '2.1.2'
     - name: Detect runner
       id: detect-runner
       run: |
         poetry run -- nox -s "ci:get-build-runner-for-flavor" -- --flavor "${{ inputs.flavor }}" --github-var runner
    outputs:
     runner: ${{ steps.detect-runner.outputs.runner }}
  build:
    needs: detect-runner
    runs-on:
      labels: ${{needs.detect-runner.outputs.runner}}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@1.0.1
        with:
          python-version: '3.10'
          poetry-version: '2.1.2'

      - name: Build SLC ${{ inputs.flavor }}
        id: build-slc
        run: |
          branch_name="${{github.head_ref || github.ref_name}}"
          poetry run -- nox -s "ci:export-and-scan-vulnerabilities" -- --flavor "${{inputs.flavor}}" --branch-name ${{github.ref_name}} --docker-user "$DOCKER_USERNAME" --docker-password "$DOCKER_PASSWORD" --commit-sha "${{ github.sha }}" --github-var slc_path
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: slc_${{inputs.flavor}}
          path: "${{ steps.build-slc.outputs.slc_path }}"
          compression-level: 0
