load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
skylib_version = "0.8.0"
http_archive(
    name = "bazel_skylib",
    type = "tar.gz",
    url = "https://github.com/bazelbuild/bazel-skylib/releases/download/{}/bazel-skylib.{}.tar.gz".format (skylib_version, skylib_version),
    sha256 = "2ef429f5d7ce7111263289644d233707dba35e39696377ebab8b0bc701f7818e",
)

load("//:python_repository.bzl", "python_local_repository")
python_local_repository(name = "python3")
python_local_repository(name = "python2")

load("//:python_repository.bzl", "numpy_local_repository")
numpy_local_repository(name = "numpy")

load("//:java_repository.bzl", "java_local_repository")
java_local_repository(name = "java")

load("//:protobuf_repository.bzl", "protobuf_local_repository")
protobuf_local_repository(name = "protobuf")

new_local_repository(
    name = "R_linux",
    path = "/usr",
    build_file_content = """
cc_library(
    name = "r-lib",
    srcs = glob(["lib/R/lib/libR.so"]),
    hdrs = glob(["share/R/include/*/*.h","share/R/include/*.h"]),
    includes = ["share/R/include"],
    visibility = ["//visibility:public"]
)
    """
)

new_local_repository(
    name = "zmq",
    path = "/",
    build_file_content = """
cc_library(
    name = "zmqlib",
    srcs = ["usr/lib/x86_64-linux-gnu/libzmq.so"],
    hdrs = glob(["usr/include/zmq*"]),
    includes = ["usr/include/"],
    visibility = ["//visibility:public"]
)
    """
)

new_local_repository(
    name = "ssl",
    path = "/",
    build_file_content = """
cc_library(
    name = "ssl",
    srcs = ["usr/lib/x86_64-linux-gnu/libssl.so","usr/lib/x86_64-linux-gnu/libcrypto.so"],
    hdrs = glob(["usr/include/openssl/*.h"]),
    includes = ["usr/include/openssl"],
    visibility = ["//visibility:public"]
)
    """
)