#!/usr/bin/env bash
###

die() { echo "ERROR:" "$@" >&2; exit 1; }

if [[ "$OSTYPE" == "darwin"* ]]; then
        optarr=$(getopt hf:t:g: "$@")
else
	optarr=$(getopt -o 'hf:t:g:' --long 'help,flavor:,test-folder:,generic-test-lang:' -- "$@")
fi

eval set -- "$optarr"

while true; do 
    case "$1" in
        -f|--flavor) FLAVOR="$2"; shift 2;;
        -t|--test-folder) test_folder="$2"; shift 2;;
        -g|--generic-test-lang) generic_test_lang="$2"; shift 2;;
        -h|--help) echo "Usage: $0"
		   echo "Options:"
		   echo "  [--flavor]     Choose flavor to test"
		   echo "  [-h|--help]    Print this help."; exit 0;;
        --) shift; break;;
        *) echo "Internal error while parsing arguments. ($1)"; exit 1;;
    esac
done

echo "$FALVOR"

[ "X$FLAVOR" = "X" ] && die "Missing mandatory argument --flavor"


DB_PORT=$(ls flavors | grep --color=never -n ${FLAVOR} | awk -F ':' '{ print $1+8898 }')
BUCKETFS_PORT=$(ls flavors | grep --color=never -n ${FLAVOR} | awk -F ':' '{ print $1+6593 }')

test_restriction=""

if [ ! -z "${test_folder-}" ]; then
    test_restriction="-t $test_folder "
fi
if [ ! -z "${generic_test_lang-}" ]; then
    test_restriction+=" -g $generic_test_lang"
fi


set -x
#./build -f $FLAVOR && ./export -f $FLAVOR && ./clean && ./start_dockerdb -p $DB_PORT -b $BUCKETFS_PORT && ( cmd="./test -f $FLAVOR -c localhost:$DB_PORT -b $BUCKETFS_PORT $test_restriction" ; $cmd )
./build -f $FLAVOR && ./export -f $FLAVOR && ./clean && ./start_dockerdb -p $DB_PORT -b $BUCKETFS_PORT && ./test -f $FLAVOR -c localhost:$DB_PORT -b $BUCKETFS_PORT $test_restriction && ./stop_dockerdb
RETURN_CODE=$?
exit $RETURN_CODE
